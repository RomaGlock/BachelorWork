// meshGenStl2Bin some.stl settings 2d.bin
// meshGenBinTo3d 2d.bin settings 3d.bin
// meshGenAdapt 3d.bin settings
// meshGenChangeProfile 3d.bin settings
// должны быть созданы папки meshGen и constant/polyMesh
//
  В папке, содержащей этот файл, находятся файлы с исходным кодом сеточного 
генератора, Makefile и файл, содержащий приблизительные настройки для моду-
лей генератора.
Сеточный генератор имеет модульную структуру. Модули позволяют:
1. Считать и записать .stl файл в текстовом виде
2. Отрезать от .stl кусок, отделённый плоскостью и достроить отрезанное до этой
    плоскости.
3. Построить структуированую сетку для задачи внешнего обтекания, состоящую из
    треугольных призм
4. Записать полученную сетку в формате OpenFOAM mesh
5. Найти положение ударной волны по некоторому полю и подвинуть внешнюю границу
6. Считать/записать объёмную/поверхностную сетку в собственном двоичном формате
7. Образующие сетки разбить на иные интервалы

  Ниже, если не оговорено особо, предполагается использование функций класса,
описанного в файле stl_io.h. и использование пространства имён stl
  Об использовании исполняемых файлов написано в п.8

п.1 Чтение/запись .stl файла
    Ограничения: 
      1).stl файл в текстовом формате
      2)поверхность состоит из треугольных элементов
    Возможности:
      1)указание точности чтения точек, т.е. какие точки слить в одну
      2)Сохранение названий всех областей (solid) .stl поверхности
    Использование:
    
      Stl_io stl=Stl_io("1.stl",1e-7);
      stl_.Write("2.stl");
      
      //Примечание: 1.stl и 2.stl не будут идентичными
      
п.2 Сечение stl плоскостью
    Ограничения:
      1)В исходной stl треугольники должны стыковаться целыми гранями
      2)Треугольники, у которых число соседей меньше трёх, будут грубо продлены
	до секущей плоскости.
    Возможности:
      1. Достраивание отсечённого куска поверхности до секущей плоскости
      2. Регулирование линейного размера элементов при достроении
      3. Получение новой поверхности, состоящей из прямого и зеркального
	отображения усечённой поверхности, необходимой для предложенного 
	здесь сеткогенератора.
    Использование:
    
      Stl_io phantom_stl=stl_.Cut_stl("settings");
      
      в phantom_stl будет записано прямое и обратное отображения.
      файл settings должен содержать секцию следующего содержания
      
      cut_options
      normal 1 0 0
      point_on_plane 100 0 0
      cs 1
      
      normal - координаты нормали к секущей плоскости
      point_on_plane - координаты точки, принадлежащей
	секущей плоскости
      cs - линейный размер элементов достроения
      
п.3 Построение структуированой сетки
    Ограничения:
      1)Первый слой сетки вытягивается по нормали, поэтому, если исходная
      поверхность плоха на столько, что её нельзя вытянуть указанным способом,
      сетка будет не пригодна для расчётов
      2)Нормали, записанные в исходной stl должны быть ориентированы одинакого:
      все внутрь или все наружу.
    Возможности:
      1)построение структуированной сетки на выпукло/вогнутых телах
      2)образующие сетки расположены на силовых линиях системы, состоящей
	зарядов в точках любой stl поверхнсти
      3)Регулирование дальнодействия потенциала 
      4)Регулирование заряда точек в зависимости
	от размера треугольников
      5)При использовании в качестве заряженной поверхности зеркального и 
	прямого отображения интересующей поверхности, гарантируется плоская
	выходная граница
      6)Ручное задание толщин слоёв из файла
      7)Адаптация входной границы сетки к ударной волне
      8)добавление к имеющейся сетки новых слоёв
    Использование:
      Stl_io stl_=Stl_io("1.stl");
      Stl_io phantom_stl;  
      phantom_stl=stl_.Cut_stl("settings");
      stl_.MMPoi("settings",phantom_stl);
      
      файл settings должен содержать секцию следующего содержания
      
      MMPE_options
      approxLength 	0.2
      lBL 		0.1
      nBL		0
      mBL		1.2
      lSW 		0.1
      nSW		0
      mSW		1.2
      q=s^a,a= 		-0.7
      E=q/(r^b),b= 	0.9 
      nLengthRel 	0
      nLayers 		-30
      lengthFile	meshGen/length
      profileFile	meshGen/profile
      createProfile?	1
      firstLayer	0	// 0 = delete FL, 1 leave FL

      
      cut_options
      normal 1 0 0
      point_on_plane 100 0 0
      cs 1
      
      approxLength приблизительная толщина сетки в относительных единицах,
	  если нет файла, содержащего длину каждой образующей
      lBL отношение толщины пограничного слоя к ударному
      nBL количество точек в пограничном слое
      mBL степень увеличения толщины слоёв в пограничном слое
      lSW,nSW,mSW аналогичные настройки для ударной волны
      q=s^a,a=  показатель степени зависимости заряда точки от площади элемента
	поверхности её содержащего
      E=q/(r^b),b= показатель степени зависимости поля от расстояния от точки
      nLengthRel используется если известны длины всех образующих, обозначает
	количество сглаживаний длин по соседям (убирает лесенку на входной границе).
	применять лучше только на выпуклых телах
      nLayers количество слоёв если не используется profileFile
	знак показывает направление первого слоя
      lengthFile имя файла, содержащего информацию о длинах образующих
      profileFile имя файла, содержащего информацию о толщинах слоёв. Если
	существует, настройки от lBL до mSW и nLayers не имеют значенния.
      createProfile? если 0, то ничего не произойдёт, иначе будет записан файл
	с названием profileFile, содержащим получившийся профиль толщин слоёв.
      firstLayer оставить ли в сетке первый нормальный слой
      normal вектор оси конуса Маха
п.4 Запись полученной сетки в формат OpenFOAM
    Ограничения: 
      1)Если сетка построена на замкнутом теле выходная граница будет найдена
      из условия сверхзвукового потока на границе области 
      (вектор чисел Маха 100 0 0 задан в stl_io.h)
    Возможности:
      1)Задание новых имён для границ сетки.
      2)Сохранение собственных имён частей поверхности
      3)Если в именах частей stl есть пробелы, в сетку запишется всё до пробела
    Использование:
    
      stl_.MakeOFMesh("settings");
      
      файл settings должен содержать секцию следующего содержания
      
      OFMesh_options
      default 0
      wall wall
      inlet inlet
      outlet outlet
      
      default если 0, то для имени поверхности тела используется параметр wall
	      иначе для этого используются имена из stl файла
      inlet имя входной границы
      outlet имя выходной границы
      
п.5 Нахождение положения ударной волны по некоторому полю
    Огрнаничения:
      1)Количество точек поля должно быть равно количеству точек сетки
      2)положение ударной волны ищется по отклонению значения поля от значения
	на входной границе
    Использование:
    
      phantom_stl.ReadBin("mymesh.bin");
      phantom_stl.findWave("settings");
      
      файл settings должен содержать секцию следующего содержания
      
      findWave_options
      extraCellsMul	1.2
      fieldFileName	FlowVertex.txt
      outputFileName	meshGen/length
      eps_field/inlet	0.05
      made 		2 //0 - OF, 1 - OF renumbered, 2 - Slava txt, 3 - Slava bin
      TOL		1e-9
      nRel		15
      elas		0.
      maxLength		10 //extraCell limiter [shock layer length]
      iterLimit		0.1 
      
      extraCellsMul коэффициент увеличения расчётной области по сравнению
	с найденным ударным слоем
      fieldFileName имя файла содержащего поле 
	(может быть получен с помощью vol2Point из git)
      outputFileName имя файла, куда будет записана информация о положении 
	ударной волны
      eps_field/inlet отношение отклонения значения величины от значения
	на входной границе к значению на входной границе. Точку где достигается
	принять за положение ударной волны
      made источник входного файла
      TOL  c какой точностью сливать точки сетки и входного файла
      nRel количество упругих сглаживаний
      elas показатель упругого закона
      maxLength предельное увеличение образуюшей сетки 
	в длинах ударного слоя на носике
      iterLimit шаг упругого сглаживателя
      
п.6 Считать/записать объёмную/поверхностную сетку в собственном двоичном формате
    Ограничение:
      Должно быть скомпиллировано на машине на которой используется
    Использование:
    
      stl_.ReadBin("1.stl");
      stl_.WriteBin("2.stl");
      
п.7 Образующие сетки разбить на иные интервалы
    Использование:
      stl_.changeProfile("settings");
      
    файл settings должен содержать секцию следующего содержания
    
    changeProfile_options
    lengthFile		meshGen/length
    nLengthRel		30
    profileFile		meshGen/profile
    createProfile?	1
    
    lengthFile имя файла, содержащего информацию о длинах образующих. Если
	файла нет или не задан, будут использованы текущие длины образующих из
	текущей сетки.
    nLengthRel используется если известны длины всех образующих, обозначает
	количество сглаживаний длин по соседям (убирает лесенку на входной границе).
	применять лучше только на выпуклых телах
    profileFile имя файла, содержащего информацию о толщинах слоёв. Толщины слоёв
	автоматически будут отнормированы на суммарную толщину. 
    createProfile? если 0, то ничего не произойдёт, иначе будет записан файл
	с названием profileFile, содержащим получившийся профиль толщин слоёв
	с отнормированными толщинами
      
п.8 Использование готовых исполняемых файлов

    meshGenStl2Bin some.stl settings 2d.bin
    meshGenBinTo3d 2d.bin settings 3d.bin
    meshGenAdapt 3d.bin settings
    meshGenChangeProfile 3d.bin settings
    
    Первая строка читает some.stl, отсекает, основываясь на settings 
	и записывает в 2d.bin, результат в meshGen/phantom.stl
	{
	  Stl_io stl_;
	  Stl_io phantom_stl;
	  stl_=Stl_io(argv[1],1e-7);
	  phantom_stl=stl_.Cut_stl(argv[2]);
	  stl_.WriteBin(argv[3]);
	  phantom_stl.WriteBin("meshGen/phantom.bin");
	  phantom_stl.Write("meshGen/phantom.stl");
	}
    Вторая строка строит из 2d.bin, основываясь на settings, сетку и записывает
	в 3d.bin и в OpenFOAM mesh или, если первый параметр - объемная сетка,
	добавляет новые слои
	{
	  Stl_io stl_;
	  Stl_io phantom_stl;
	  stl_.ReadBin(argv[1]);  
	  phantom_stl.ReadBin("meshGen/phantom.bin");
	  stl_.MMPoi(argv[2],phantom_stl);
	  stl_.WriteBin(argv[3]);
	  stl_.MakeOFMesh(argv[2]);
	}
    Третья строка ищет ударную волну для сетки записанной в 3d.bin
	с настройками в settings
	{	  
	  Stl_io phantom_stl;
	  phantom_stl.ReadBin(argv[1]);
	  phantom_stl.findWave(argv[2]);
	}
    Четвёртая строка переразбивает образующие на новые отрезки. Не гарантируется
	непересечение слоёв при очень крупных ячеек
	{
	  Stl_io stl_;
	  stl_.ReadBin(argv[1]);
	  stl_.changeProfile(argv[2]);
	  stl_.WriteBin(argv[1]);
	  stl_.MakeOFMesh(argv[2]);
	}